.rootNodeContainer {
    width: 0;
    height: 0;
}

.PropositionNode {
    color: var(--main-color);
    position: relative;
    padding-left: 5rem;
    transform-origin: center left;
    transform: rotate(var(--rotation-angle));
    cursor: pointer;
}
.PropositionNode::before {
    /* the graph's edges are :before pseudoelements */
    content: "";
    position: absolute;
    right: 0;
    transform: translate(0,-50%);
    width: 100%;
    height: 1px;
    background: var(--main-color);
}

/* 
    We only show the active foreground nodes
    Otherwise we hide them, and see the background nodes behind them
    Reason is that the changing stacking context causes a flickering in the siblings of 
    the foreground. So we hide them, and show a background instead.
*/
.foreground .PropositionNode {
    visibility: hidden;
}

.foreground .PropositionNode.active {
    visibility: visible;
    color: var(--highlight-color);
    z-index: 10;
}

.PropositionNode.active::before {
    height: 3px;
    background: var(--highlight-color);
}

.rootNodeContainer > .PropositionNode {
    padding: 0;
    border: none;
}

.Proposition {
    position: absolute;
    top: 50%;
    right: 0;
    transform:  translate(50%,-50%) rotate(var(--compensating-angle));
    background: #fff;
    z-index: 11;
    padding: .1rem;
}

.Proposition__number {
    margin: 0;
    padding: 0;
}

.PropositionNode__children {
    position: absolute;
    top: 0;
    right: 0;
    margin: 0;
    padding: 0;
    list-style: none;
}

.PropositionNode__child {
    position: absolute;
    top: 0;
    left: 0;
}
